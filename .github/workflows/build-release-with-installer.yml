# .github/workflows/build-release-with-installer.yml

name: Build, Publish & Release with Installer

on:
  workflow_dispatch: # Allows manual triggering of the workflow from GitHub UI
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build project
      run: dotnet build --no-restore --configuration Release

    - name: Publish to a single file (Windows x64)
      run: dotnet publish -c Release -r win-x64 --self-contained true -p:PublishSingleFile=true -p:IncludeNativeLibrariesForSelfExtract=true -p:PublishTrimmed=true -o publish_output

    - name: Upload Executable Artifact
      uses: actions/upload-artifact@v4
      with:
        name: v2e-windows-x64
        path: publish_output/v2e.exe

    # --- New Steps for Installer --- 
    - name: Install Inno Setup
      uses: crazy-max/ghaction-inno-setup@v3
      with:
        version: "6.2.2"

    - name: Compile Installer
      run: iscc.exe "setup.iss"
      # This will use setup.iss and create the installer in the 'installer_output' directory

    - name: Upload Installer Artifact
      uses: actions/upload-artifact@v4
      with:
        name: installer-windows-x64
        path: installer_output/v2e-0.0.3-setup.exe

  build-linux-and-release:
    runs-on: ubuntu-latest
    needs: [build-windows]
    permissions:
      contents: write # Required to create a release and upload assets

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore, Build, and Publish (Linux x64)
      run: |
        dotnet restore
        dotnet build --no-restore --configuration Release
        dotnet publish -c Release -r linux-x64 --self-contained true -p:PublishSingleFile=true -p:IncludeNativeLibrariesForSelfExtract=true -p:PublishTrimmed=true -o publish_output

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body: "Automated release for version ${{ github.ref_name }}"
        draft: false
        prerelease: false

    - name: Upload Linux Executable
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./publish_output/v2e
        asset_name: v2e-linux-x64
        asset_content_type: application/octet-stream

    - name: Download Windows Executable Artifact
      uses: actions/download-artifact@v4
      with:
        name: v2e-windows-x64
        path: ./windows-artifact

    - name: Upload Windows Executable
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./windows-artifact/v2e.exe
        asset_name: v2e-windows-x64.exe
        asset_content_type: application/octet-stream

    - name: Download Windows Installer Artifact
      uses: actions/download-artifact@v4
      with:
        name: installer-windows-x64
        path: ./installer-artifact

    - name: Upload Windows Installer
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./installer-artifact/v2e-0.0.3-setup.exe
        asset_name: v2e-0.0.3-setup.exe
        asset_content_type: application/octet-stream
